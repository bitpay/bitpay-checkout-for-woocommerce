<?php

// scoper-autoload.php @generated by PhpScoper

// Backup the autoloaded Composer files
if (isset($GLOBALS['__composer_autoload_files'])) {
    $existingComposerAutoloadFiles = $GLOBALS['__composer_autoload_files'];
}

$loader = require_once __DIR__.'/autoload.php';
// Ensure InstalledVersions is available
$installedVersionsPath = __DIR__.'/composer/InstalledVersions.php';
if (file_exists($installedVersionsPath)) require_once $installedVersionsPath;

// Restore the backup
if (isset($existingComposerAutoloadFiles)) {
    $GLOBALS['__composer_autoload_files'] = $existingComposerAutoloadFiles;
} else {
    unset($GLOBALS['__composer_autoload_files']);
}

// Class aliases. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/further-reading.md#class-aliases
if (!function_exists('humbug_phpscoper_expose_class')) {
    function humbug_phpscoper_expose_class(string $exposed, string $prefixed): void {
        if (!class_exists($exposed, false) && !interface_exists($exposed, false) && !trait_exists($exposed, false)) {
            spl_autoload_call($prefixed);
        }
    }
}
humbug_phpscoper_expose_class('JsonMapper', 'BitPayVendor\JsonMapper');
humbug_phpscoper_expose_class('JsonMapper_Exception', 'BitPayVendor\JsonMapper_Exception');
humbug_phpscoper_expose_class('ComposerAutoloaderInitf473c4f54ab054055962eda48d4cde97', 'BitPayVendor\ComposerAutoloaderInitf473c4f54ab054055962eda48d4cde97');
humbug_phpscoper_expose_class('ErrorTest', 'BitPayVendor\ErrorTest');
humbug_phpscoper_expose_class('SecureRandomTest', 'BitPayVendor\SecureRandomTest');
humbug_phpscoper_expose_class('Base58Test', 'BitPayVendor\Base58Test');
humbug_phpscoper_expose_class('Secp256k1Test', 'BitPayVendor\Secp256k1Test');
humbug_phpscoper_expose_class('UtilTest', 'BitPayVendor\UtilTest');
humbug_phpscoper_expose_class('FingerprintTest', 'BitPayVendor\FingerprintTest');
humbug_phpscoper_expose_class('PointTest', 'BitPayVendor\PointTest');
humbug_phpscoper_expose_class('BcEngineTest', 'BitPayVendor\BcEngineTest');
humbug_phpscoper_expose_class('GmpEngineTest', 'BitPayVendor\GmpEngineTest');
humbug_phpscoper_expose_class('MathTest', 'BitPayVendor\MathTest');
humbug_phpscoper_expose_class('PrivateKeyTest', 'BitPayVendor\PrivateKeyTest');
humbug_phpscoper_expose_class('SinKeyTest', 'BitPayVendor\SinKeyTest');
humbug_phpscoper_expose_class('PublicKeyTest', 'BitPayVendor\PublicKeyTest');
humbug_phpscoper_expose_class('KeyTest', 'BitPayVendor\KeyTest');
humbug_phpscoper_expose_class('EncryptedFilesystemStorageTest', 'BitPayVendor\EncryptedFilesystemStorageTest');
humbug_phpscoper_expose_class('FilesystemStorageTest', 'BitPayVendor\FilesystemStorageTest');

// Function aliases. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/further-reading.md#function-aliases
if (!function_exists('ctype_alnum')) { function ctype_alnum() { return \BitPayVendor\ctype_alnum(...func_get_args()); } }
if (!function_exists('ctype_alpha')) { function ctype_alpha() { return \BitPayVendor\ctype_alpha(...func_get_args()); } }
if (!function_exists('ctype_cntrl')) { function ctype_cntrl() { return \BitPayVendor\ctype_cntrl(...func_get_args()); } }
if (!function_exists('ctype_digit')) { function ctype_digit() { return \BitPayVendor\ctype_digit(...func_get_args()); } }
if (!function_exists('ctype_graph')) { function ctype_graph() { return \BitPayVendor\ctype_graph(...func_get_args()); } }
if (!function_exists('ctype_lower')) { function ctype_lower() { return \BitPayVendor\ctype_lower(...func_get_args()); } }
if (!function_exists('ctype_print')) { function ctype_print() { return \BitPayVendor\ctype_print(...func_get_args()); } }
if (!function_exists('ctype_punct')) { function ctype_punct() { return \BitPayVendor\ctype_punct(...func_get_args()); } }
if (!function_exists('ctype_space')) { function ctype_space() { return \BitPayVendor\ctype_space(...func_get_args()); } }
if (!function_exists('ctype_upper')) { function ctype_upper() { return \BitPayVendor\ctype_upper(...func_get_args()); } }
if (!function_exists('ctype_xdigit')) { function ctype_xdigit() { return \BitPayVendor\ctype_xdigit(...func_get_args()); } }
if (!function_exists('get_plugins')) { function get_plugins() { return \BitPayVendor\get_plugins(...func_get_args()); } }
if (!function_exists('getallheaders')) { function getallheaders() { return \BitPayVendor\getallheaders(...func_get_args()); } }
if (!function_exists('includeIfExists')) { function includeIfExists() { return \BitPayVendor\includeIfExists(...func_get_args()); } }
if (!function_exists('trigger_deprecation')) { function trigger_deprecation() { return \BitPayVendor\trigger_deprecation(...func_get_args()); } }

return $loader;
